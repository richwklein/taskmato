name: Tag and Deploy Release

on:
  push:
    branches:
      - main

env:
  ARTIFACT_NAME: 'build-artifacts'
  ARTIFACT_PATH: 'dist'

jobs:
  build:
    uses: ./.github/workflows/code-build.yaml
    secrets: inherit

  tag-release:
    needs: build
    name: 'Tag on Release'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: 'Create GitHub release'
        id: 'release'
        uses: 'justincy/github-action-npm-release@2.0.2'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Output new tag'
        if: steps.release.outputs.released == 'true'
        env:
          RELEASE_TAG: ${{ steps.release.outputs.release_tag }}
          RELEASE_NAME: ${{ steps.release.outputs.release_name }}
        run: echo "new tag $RELEASE_TAG ($RELEASE_NAME)"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: Compress build artifacts
        run: |
          tar -czf taskmato-${{ steps.release.outputs.release_name }}.tar.gz -C ${{ env.ARTIFACT_PATH }} .

      - name: Upload build artifacts to GitHub release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./taskmato-${{ steps.release.outputs.release_name }}.tar.gz
          asset_name: taskmato-${{ steps.release.outputs.release_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Deploy to Netlify
        run: |
          pnpm exec netlify deploy \
            --dir ${{ env.ARTIFACT_PATH }} \
            --site ${{ secrets.NETLIFY_SITE_ID }} \
            --auth ${{ secrets.NETLIFY_API_TOKEN }} \
            --prod
